https://dzone.com/articles/top-20-git-commands-with-examples

Working with git pull:
git pull origin master

Working with git stash:

git stash
git stash show
git stash apply

Working with git log:
git log
Reverting to my previous commit:
git log --oneline

Working with git revert:
git revert commitid
git revert HEAD



=================================================================

https://us-east-2.console.aws.amazon.com/ec2/v2/home?region=us-east-2#LaunchInstanceWizard:

EC2
Lauch instance
Step 1: Choose an Amazon Machine Image (AMI)
---->
Amazon Linux
Free tier eligible
Select
64-bit (x86)
Amazon Linux AMI 2018.03.0 (HVM), SSD Volume Type - ami-02f706d959cedf892 ->t2.micro  Free tier eligible


login as - ec2-user

sudo su -
yum install docker             = go to internet and fetch the package , it goes to dokcer site and fectch package
service docker start           = 
service docker status
docker pull nginx              = it will be go to dokcer hub
docker pull httpd

docker run ngnix

docker ps -a
docker exec -it <cinainer id> /bin/sh





dokcer run -d = running docker in backend



==================================
to create new fie inside container
==================================
[root@ip-172-31-16-89 ~]# docker exec -it a8e1d67de702 /bin/sh
# touch n.txt
# ls
bin   dev  home  lib64  mnt    opt   root  sbin  sys  usr
boot  etc  lib   media  n.txt  proc  run   srv   tmp  var
# exit


nayansi/devopstraning1



pull image - ngninx
now I want that image on differnt container




=====================================

docker download-https://docs.docker.com/docker-for-windows/install/








mkdir dirname
cd dirname
vi Dockerfile

FROM ubuntu
MAINTAINER XXX@gmail.com 

RUN apt update 
RUN apt install nginx -y 
CMD [“echo”,”Image created”] 

:wq

sudo docker build -t myimage .
docker tag myimage chaitanyagaajula/
test1

docker push chaitanyagaajula/test1




dirnayan2



=========================================================

Create your own network
========================================================

>docker network create <networkname>
========================================================


create contianer using newer newtork created
=============================================
docker run -it --network networknayan --name  nginx5 nginx /bin/sh
>exit
>docker ps -a
>list out extited container
>start exited container
>docker inspect <container-id>
>ip addrress should be of newly created network
=========================================


c4b82fbe826d49089f92c6a0019bccce
admin admin nayan

http://3.14.152.94:8080/

jenkins url -http://18.219.238.254:8080/
w
jenkins cli -image url -  

https://nayansi.s3.us-east-2.amazonaws.com/jenkins-cli.jar

java -jar jenkins-cli.jar -s http://18.219.238.254:8080/ help


